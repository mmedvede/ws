#! /usr/bin/env bash
# Save first level CVS in the folder to specified file as in rosinstall format.
# Uses git's origin as url

set -e
set -u

if [ "$*" = "--help" -o "$*" = "-h" ]; then
  echo "Usage:
  $(basename $0) [<workspace_path> [<output_filename>] ]

  <workspace_path>: Path to the workspace that you want to save.
    If omitted, assume <workspace_path>=ROS_WORKSPACE.
    If no ROS_WORKSPACE is set, assume <workspace_path>=pwd.

  <output_filename>: Specify where the generated rosinstall would be saved.
    If not specified, use <workspace_path>/ and save into subfolder with postfix -workspace.
    For example, if <workspace_path> is sandbox, would save into sandbox/sandbox-workspace/workspace.rosinstall" 1>&2
  exit 0
fi

if [ -z "$*" ]; then
# Case for no arguments
  if [ -z "${ROS_WORKSPACE+defined}" ] || [ -z "$ROS_WORKSPACE" ]; then 
    working_dir=$(pwd)
    echo "ROS_WORKSPACE empty/not defined."
  else
    working_dir=$ROS_WORKSPACE
  fi
else
# Workspace path is specified
  if [ -d "$1" ]; then
    working_dir=$1
  else
    echo "$1 is not a directory" 1>&2
    exit 1
  fi
fi
# Expand relative paths
working_dir=$(cd $working_dir && pwd)

if [ -z "${2+defined}" ] || [ -z "$2" ]; then
  # Save location is not specified, use default
  output_file=$working_dir/$(basename $working_dir)-workspace/workspace.rosinstall
else
  output_file=$2
fi

if [ ! -e "$(dirname $output_file)" ]; then
  # Create directory if does not exists
  mkdir "$(dirname $output_file)"
fi
echo "Saving $working_dir workspace into $output_file"


pushd $working_dir > /dev/null

# We are now at the location, crawl first-level CVS and get info
rosinstall_text=""
for dir in `ls -d -- */`; do
  dir_name=`echo $dir| sed "s/\///"`
  pushd $dir_name > /dev/null

  pack_type=""
  uri=""
  version=""
  # Not supporting more than one VCS for a single directory

  #############################
  # GIT
  #############################
  if [ -d ".git" ];then
    pack_type=git
    uri=$( git remote -v | grep origin | head -n1 | cut -d' ' -f1 | sed s/origin//| tr -d '\011')
    version=$(git status | grep "On branch" | rev |cut -d' ' -f1 | rev)
    if [ -z "$version" ]; then
      if [ -n "$(git tag --contains HEAD)" ]; then
        version=$(git tag --contains HEAD)
      else
        version=$(git rev-parse --verify HEAD)
      fi
    fi
    if [ -z "$uri" ]; then uri=$(pwd); fi
  #############################
  # SVN
  #############################
  elif [ -d ".svn" ];then
    pack_type=svn
    uri=$(svn info | grep URL |cut -d' ' -f2)
    version=r$(svn info |grep Revision | cut -d' ' -f2)
  else
    pack_type=other
  fi

  if [ -n "$uri" ]; then uri=",uri: ""'""$uri""'"""; fi
  if [ -n "$version" ]; then version=",version: $version"; fi
  local_name="local-name: ""'""$dir_name""'""" # need quotations, rosws goes belly-up

  rosinstall_text=$rosinstall_text"- $pack_type: {$local_name $uri $version}\n"
  popd > /dev/null
done

popd > /dev/null

# Save the generated rosinstall
echo "# Generated by $(basename $0)" > $output_file
echo -e $rosinstall_text >> $output_file
