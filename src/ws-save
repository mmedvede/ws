#! /usr/bin/env bash
# Save first level CVS in the folder to specified file as in rosinstall format.
# Uses git's origin as url

set -e
set -u

if [ -z "$*" ]; then
  echo "Usage:
  $(basename $0) <output file> [<workspace folder to save>]" 1>&2
  exit 0
fi
output_file=$1

if [ -z "${2-}" ]; then
  working_dir=$(pwd)
elif [ -d "$2" ]; then
  working_dir=$2
else
  echo "$2 is not a directory" 1>&2
  exit 1
fi

pushd $working_dir > /dev/null

# We are now at the location, crawl first-level CVS and get info
rosinstall_text=""
for dir in `ls -d -- */`; do
  dir_name=`echo $dir| sed "s/\///"`
  pushd $dir_name > /dev/null

  vcs=""
  uri=""
  version=""
  # Not supporting more than one VCS for a single directory

  #############################
  # GIT
  #############################
  if [ -d ".git" ];then
    vcs=git
    uri=$( git remote -v | grep origin | head -n1 | cut -d' ' -f1 | sed s/origin//| tr -d '\011')
    version=$(git status | grep "On branch" | rev |cut -d' ' -f1 | rev)
    if [ -z "$version" ]; then
      if [ -n "$(git tag --contains HEAD)" ]; then
        version=$(git tag --contains HEAD)
      else
        version=$(git rev-parse --verify HEAD)
      fi
    fi
  #############################
  # SVN
  #############################
  elif [ -d ".svn" ];then
    vcs=svn
    uri=$(svn info | grep URL |cut -d' ' -f2)
    version=r$(svn info |grep Revision | cut -d' ' -f2)
  fi

  if [ -n "$uri" ]; then
    rosinstall_text=$rosinstall_text"- $vcs: {local-name: $dir_name, uri: ""'""$uri""'"", version: $version}\n"
  fi
  popd > /dev/null
done

popd > /dev/null

# Save the generated rosinstall
echo "# Generated by $(basename $0)" > $output_file
echo -e $rosinstall_text >> $output_file
